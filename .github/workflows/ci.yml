# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.1.3, 2.12.16, 2.13.8]
        java: [temurin@8, temurin@11]
        project: [rootJS, rootJVM, rootNative]
        workers: [1, 4]
        exclude:
          - project: rootJS
            java: temurin@11
          - project: rootNative
            java: temurin@11
          - project: rootJS
            workers: 4
          - project: rootNative
            workers: 4
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@8)
        id: download-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 8
          jdkFile: ${{ steps.download-java-temurin-8.outputs.jdkFile }}

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt githubWorkflowCheck

      - name: scalaJSLink
        if: matrix.project == 'rootJS'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: nativeLink
        if: matrix.project == 'rootNative'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' Test/nativeLink

      - name: Test
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@8'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@8'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: mkdir -p target .js/target core/native/target core/js/target core/jvm/target .jvm/target .native/target bench/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: tar cf targets.tar target .js/target core/native/target core/js/target core/jvm/target .jvm/target .native/target bench/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}-${{ matrix.workers }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@8)
        id: download-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 8
          jdkFile: ${{ steps.download-java-temurin-8.outputs.jdkFile }}

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (3.1.3, rootJS, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.1.3-rootJS-1

      - name: Inflate target directories (3.1.3, rootJS, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.1.3, rootJVM, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.1.3-rootJVM-1

      - name: Inflate target directories (3.1.3, rootJVM, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.1.3, rootNative, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.1.3-rootNative-1

      - name: Inflate target directories (3.1.3, rootNative, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.16, rootJS, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12.16-rootJS-1

      - name: Inflate target directories (2.12.16, rootJS, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.16, rootJVM, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12.16-rootJVM-1

      - name: Inflate target directories (2.12.16, rootJVM, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.16, rootNative, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12.16-rootNative-1

      - name: Inflate target directories (2.12.16, rootNative, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.8, rootJS, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootJS-1

      - name: Inflate target directories (2.13.8, rootJS, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.8, rootJVM, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootJVM-1

      - name: Inflate target directories (2.13.8, rootJVM, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.8, rootNative, 1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootNative-1

      - name: Inflate target directories (2.13.8, rootNative, 1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        run: echo $PGP_SECRET | base64 -di | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        run: |
          echo "$PGP_SECRET" | base64 -di > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        run: sbt '++${{ matrix.scala }}' tlRelease

  examples:
    name: Examples
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@8)
        id: download-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 8
          jdkFile: ${{ steps.download-java-temurin-8.outputs.jdkFile }}

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Build examples
        run: |
          cd examples
          for d in */ ; do cd "$d" && sbt test:compile && cd ../ ; done

  bench:
    name: Bench
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@8)
        id: download-java-temurin-8
        if: matrix.java == 'temurin@8'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Java (temurin@8)
        if: matrix.java == 'temurin@8'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 8
          jdkFile: ${{ steps.download-java-temurin-8.outputs.jdkFile }}

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Build benchmark suite
        run: 'sbt ''++${{ matrix.scala }}'' ''bench/jmh:run -p genSize=0 -p seedCount=0 -bs 1 -wi 0 -i 1 -f 0 -t 1 -r 0 org.scalacheck.bench.GenBench'''
